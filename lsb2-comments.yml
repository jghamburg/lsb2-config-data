server:
  port: 9000
security:
  sessions: never
  user:
    password: password

togglz:
  console:
    secured: false
    enabled: true
    path: /actuator/togglz
    use-management-port: false
    feature-admin-authority: ROLE_ADMIN
  cache:
    enabled: false # Enable feature state caching.
    time-to-live: 0 # The time after which a cache entry will expire.
    time-unit: milliseconds # The time unit as java.util.concurrent.TimeUnit enum name (one of "nanoseconds", "microseconds", "milliseconds", "seconds", "minutes", "hours", "days").
  feature-enums: com.greglturnquist.learningspringboot.comments.MyFeatures
  
#
# details on endpoints: https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html#production-ready-endpoints-exposing-endpoints
management:
  endpoints:
    enabled-by-default: true
    web:
      base-path: /actuator
      exposure:
        include: "*"
        exclude: shutdown
  endpoint:
    health:
      show-details: always
  health:
    defaults:
      enabled: true

spring:
  session:
    store-type: mongodb
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMG_PORT:5672}
    username: ${RABBITMG_USERNAME:guest}
    password: ${RABBITMG_PASSWORD:guest}
  data:
    mongodb:
      host: ${MONGODB_HOST:localhost}
      port: ${MONGODB_PORT:27017}
      database: ${MONGODB_DB_NAME:lsb2db}
  cloud:
    config:
      uri: ${CONFIG_SERVER_URI:http://localhost:8888}
    function:
      definition: save
    stream:
      binders:
        rabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: ${RABBITMQ_HOST:localhost}
                port: ${RABBITMQ_PORT:5672}
                username: ${RABBITMQ_USERNAME:guest}
                password: ${RABBITMQ_PASSWORD:guest}
                virtual-host: /
      bindings:
        save-in-0:
          destination: learning-spring-boot-comments
          group: comments-service
          content-type: application/json
          header-mode: embeddedHeaders
          max-attempts: 3
          back-off-initial-interval: 1000
          back-off-MaxInterval: 10000
          back-off-multiplier: 2
          binder: rabbit
        save-out-0:
          destination: learning-spring-boot-chat
          content-type: application/json
          header-mode: embeddedHeaders
          error-channel-enabled: true
          binder: rabbit
      rabbit:
        bindings:
          save-in-0:
            consumer:
              exchangeType: direct
              bindingRoutingKey: ${RABBITMQ_EXCHANGE_SAVE_REQUEST_ROUTE_KEY:saveRequests-local}
          save-out-0:
            producer:
              exchangeType: direct
              routing-key-expression: "'${RABBITMQ_EXCHANGE_SAVE_RESPONSE_ROUTE_KEY:saveResponses-local}'"
#              routing-key-expression: "'assetsPublishResponses'"
